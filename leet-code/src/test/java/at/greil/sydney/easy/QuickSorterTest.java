package at.greil.sydney.easy;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class QuickSorterTest {

    QuickSorter quickSorter;

    @BeforeEach
    void setUp() {
        quickSorter = new QuickSorter();
    }

    @Test
    void sort() {
        int[] input = {5, 9, 4, 2, 1};
        int[] actual = quickSorter.sort(input);
        int[] expected = {1, 2, 4, 5, 9};

        assertArrayEquals(expected, actual);
    }

    @Test
    void sortExample2() {
        int[] input = {2585, 839, 621, 1514, 1559, 1702, 2524, 240, 2759, 2977, 3000, 3575, 3723, 3814, 3936, 4127, 4210, 4352, 4390, 4527, 5178, 5345, 5427, 6693, 7361, 7865, 7893, 7988, 8031, 8286, 8424, 8739, 8809, 8860, 9015, 9139, 9267, 9359, 10052, 10234, 10249, 10487, 10790, 11112, 11309, 11311, 11806, 11818, 11921, 12054, 12114, 12219, 12992, 13317, 13581, 13631, 13888, 14257, 14584, 15471, 15522, 15962, 16034, 16144, 16541, 16692, 16820, 16862, 16906, 17237, 17242, 17963, 17996, 18114, 18150, 18300, 18662, 18774, 18880, 18929, 19388, 19582, 19667, 19854, 19957, 19979, 20054, 20437, 20764, 20907, 20971, 21229, 21235, 21362, 21433, 21626, 22187, 22440, 22493, 23070, 23377, 23804, 23828, 23907, 23994, 24011, 24207, 24843, 25045, 25465, 25737, 25887, 26328, 26392, 26596, 26851, 26890, 27217, 27623, 27794, 28094, 28389, 28415, 28617, 29007, 29078, 29267, 29347, 29373, 29431, 29452, 29577, 29686, 29969, 30126, 30329, 30604, 30718, 30792, 30933, 31024, 31661, 31760, 31866, 32152, 32169, 32215, 32872, 33283, 33341, 33475, 33621, 34653, 34722, 34796, 35166, 35269, 35325, 35715, 35861, 35980, 36078, 36105, 36408, 36580, 36822, 37046, 37263, 37301, 37357, 37567, 37712, 37775, 37813, 37886, 37937, 38146, 38505, 38726, 38744, 38835, 39124, 39410, 39556, 39579, 39688, 39723, 41092, 41371, 41426, 41653, 42324, 42483, 43074, 43315, 43409, 43643, 43811, 44030, 44144, 44266, 44615, 45447, 45573, 45580, 46175, 46343, 46587, 46882, 47157, 47192, 47232, 47385, 47418, 47694, 47731, 47904, 48696, 48789, 48909, 49028, 49107, 49141, 49399, 49438, 49999, 50402, 50573, 50638, 50745, 50802, 50850, 50870, 50920, 51127, 51131, 51464, 51588, 51647, 51876, 52165, 52229, 52405, 52656, 52757, 52895, 53248, 53534, 53947, 54123, 54125, 54137, 54142, 54245, 54250, 54436, 54457, 54496, 54638, 54783, 55480, 55487, 55752, 55786, 56112, 56750, 57005, 57426, 57579, 57816, 57830, 57836, 58095, 58202, 58267, 58713, 58985, 59056, 59109, 59211, 59781, 59894, 60299, 60491, 60735, 61005, 61561, 61587, 61707, 61767, 61941, 62129, 62326, 62412, 62942, 62972, 63136, 63490, 63509, 63749, 63950, 64578, 64655, 64698, 64729, 65219, 65251, 65579, 65617, 65768, 65897, 66449, 66655, 66895, 67163, 67667, 67756, 68535, 68722, 68849, 68949, 69114, 69227, 69411, 70065, 70077, 70388, 70655, 71136, 71208, 71239, 71305, 71334, 71358, 71445, 71714, 72061, 72117, 72140, 72200, 72525, 72554, 72831, 72916, 73467, 73692, 73980, 74030, 74032, 74237, 74669, 74759, 74792, 75371, 75552, 75698, 75792, 75867, 76671, 76783, 76786, 76811, 76995, 77175, 77214, 77245, 77422, 77753, 77826, 78098, 78297, 78390, 78472, 78557, 78665, 78862, 78921, 78976, 79123, 79151, 79279, 79403, 79537, 79608, 79628, 79895, 80523, 80787, 80876, 80941, 80950, 81021, 81059, 81128, 81159, 81587, 81668, 82071, 82247, 82269, 82473, 82731, 82744, 83148, 83429, 83741, 83923, 84002, 84013, 84039, 84233, 84299, 84367, 84446, 84582, 84642, 85432, 85450, 85668, 85935, 86324, 86461, 86840, 87249, 87318, 87818, 88266, 88276, 88581, 88771, 89038, 89424, 89463, 89668, 89798, 89824, 90530, 90659, 90731, 90859, 90919, 90962, 91062, 91101, 91473, 91977, 91982, 92253, 92401, 92580, 93625, 93638, 93661, 93853, 93884, 93981, 94254, 94998, 95100, 95150, 95194, 95406, 95446, 95632, 95653, 95813, 95834, 95979, 96200, 96278, 96509, 96573, 96647, 96678, 96752, 96818, 96858, 96933, 97321, 97369, 97471, 97677, 97679, 98049, 98490, 98540, 98583, 98661, 98673, 98792, 98797, 98889, 98904, 98909, 98961, 98986, 99160, 99535, 99743, 99869};
        int[] actual = quickSorter.sort(input);
        int[] expected = {240, 621, 839, 1514, 1559, 1702, 2524, 2585, 2759, 2977, 3000, 3575, 3723, 3814, 3936, 4127, 4210, 4352, 4390, 4527, 5178, 5345, 5427, 6693, 7361, 7865, 7893, 7988, 8031, 8286, 8424, 8739, 8809, 8860, 9015, 9139, 9267, 9359, 10052, 10234, 10249, 10487, 10790, 11112, 11309, 11311, 11806, 11818, 11921, 12054, 12114, 12219, 12992, 13317, 13581, 13631, 13888, 14257, 14584, 15471, 15522, 15962, 16034, 16144, 16541, 16692, 16820, 16862, 16906, 17237, 17242, 17963, 17996, 18114, 18150, 18300, 18662, 18774, 18880, 18929, 19388, 19582, 19667, 19854, 19957, 19979, 20054, 20437, 20764, 20907, 20971, 21229, 21235, 21362, 21433, 21626, 22187, 22440, 22493, 23070, 23377, 23804, 23828, 23907, 23994, 24011, 24207, 24843, 25045, 25465, 25737, 25887, 26328, 26392, 26596, 26851, 26890, 27217, 27623, 27794, 28094, 28389, 28415, 28617, 29007, 29078, 29267, 29347, 29373, 29431, 29452, 29577, 29686, 29969, 30126, 30329, 30604, 30718, 30792, 30933, 31024, 31661, 31760, 31866, 32152, 32169, 32215, 32872, 33283, 33341, 33475, 33621, 34653, 34722, 34796, 35166, 35269, 35325, 35715, 35861, 35980, 36078, 36105, 36408, 36580, 36822, 37046, 37263, 37301, 37357, 37567, 37712, 37775, 37813, 37886, 37937, 38146, 38505, 38726, 38744, 38835, 39124, 39410, 39556, 39579, 39688, 39723, 41092, 41371, 41426, 41653, 42324, 42483, 43074, 43315, 43409, 43643, 43811, 44030, 44144, 44266, 44615, 45447, 45573, 45580, 46175, 46343, 46587, 46882, 47157, 47192, 47232, 47385, 47418, 47694, 47731, 47904, 48696, 48789, 48909, 49028, 49107, 49141, 49399, 49438, 49999, 50402, 50573, 50638, 50745, 50802, 50850, 50870, 50920, 51127, 51131, 51464, 51588, 51647, 51876, 52165, 52229, 52405, 52656, 52757, 52895, 53248, 53534, 53947, 54123, 54125, 54137, 54142, 54245, 54250, 54436, 54457, 54496, 54638, 54783, 55480, 55487, 55752, 55786, 56112, 56750, 57005, 57426, 57579, 57816, 57830, 57836, 58095, 58202, 58267, 58713, 58985, 59056, 59109, 59211, 59781, 59894, 60299, 60491, 60735, 61005, 61561, 61587, 61707, 61767, 61941, 62129, 62326, 62412, 62942, 62972, 63136, 63490, 63509, 63749, 63950, 64578, 64655, 64698, 64729, 65219, 65251, 65579, 65617, 65768, 65897, 66449, 66655, 66895, 67163, 67667, 67756, 68535, 68722, 68849, 68949, 69114, 69227, 69411, 70065, 70077, 70388, 70655, 71136, 71208, 71239, 71305, 71334, 71358, 71445, 71714, 72061, 72117, 72140, 72200, 72525, 72554, 72831, 72916, 73467, 73692, 73980, 74030, 74032, 74237, 74669, 74759, 74792, 75371, 75552, 75698, 75792, 75867, 76671, 76783, 76786, 76811, 76995, 77175, 77214, 77245, 77422, 77753, 77826, 78098, 78297, 78390, 78472, 78557, 78665, 78862, 78921, 78976, 79123, 79151, 79279, 79403, 79537, 79608, 79628, 79895, 80523, 80787, 80876, 80941, 80950, 81021, 81059, 81128, 81159, 81587, 81668, 82071, 82247, 82269, 82473, 82731, 82744, 83148, 83429, 83741, 83923, 84002, 84013, 84039, 84233, 84299, 84367, 84446, 84582, 84642, 85432, 85450, 85668, 85935, 86324, 86461, 86840, 87249, 87318, 87818, 88266, 88276, 88581, 88771, 89038, 89424, 89463, 89668, 89798, 89824, 90530, 90659, 90731, 90859, 90919, 90962, 91062, 91101, 91473, 91977, 91982, 92253, 92401, 92580, 93625, 93638, 93661, 93853, 93884, 93981, 94254, 94998, 95100, 95150, 95194, 95406, 95446, 95632, 95653, 95813, 95834, 95979, 96200, 96278, 96509, 96573, 96647, 96678, 96752, 96818, 96858, 96933, 97321, 97369, 97471, 97677, 97679, 98049, 98490, 98540, 98583, 98661, 98673, 98792, 98797, 98889, 98904, 98909, 98961, 98986, 99160, 99535, 99743, 99869};

        assertArrayEquals(expected, actual);
    }
}